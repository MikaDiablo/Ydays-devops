version: '3'

volumes:
    prometheus_data: {}
    grafana_data: {}
    html:
    dhparam:
    vhost:
    certs:
    sonarqube_conf:
    sonarqube_data:
    sonarqube_extensions:
    sonarqube_bundled-plugins:
    postgresql:
    postgresql_data:

networks:
  net:
    external: true


services:

  reverse-proxy:
      image: "jwilder/nginx-proxy:latest"
      container_name: "reverse-proxy"
      volumes:
          - "html:/usr/share/nginx/html"
          - "dhparam:/etc/nginx/dhparam"
          - "vhost:/etc/nginx/vhost.d"
          - "certs:/etc/nginx/certs"
          - "/run/docker.sock:/tmp/docker.sock:ro"
      restart: "always"
      networks: 
          - "net"
      ports:
          - "80:80"
          - "443:443"

  letsencrypt:
      image: "jrcs/letsencrypt-nginx-proxy-companion:latest"
      container_name: "letsencrypt-helper"
      volumes:
          - "html:/usr/share/nginx/html"
          - "dhparam:/etc/nginx/dhparam"
          - "vhost:/etc/nginx/vhost.d"
          - "certs:/etc/nginx/certs"
          - "/run/docker.sock:/var/run/docker.sock:ro"
      environment:
          NGINX_PROXY_CONTAINER: "reverse-proxy"
          DEFAULT_EMAIL: "maeva.champrigaud@ynov.com"
      restart: "always"
      depends_on:
          - "reverse-proxy"
      networks: 
          - "net"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    restart: always
    expose:
      - 9090
    networks:
      - net
    environment:
      - LETSENCRYPT_HOST=prometheus-devops
      - VIRTUAL_HOST=prometheus-devops
      - VIRTUAL_PORT=9090

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: always
    deploy:
      mode: global

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  cadvisor:
    container_name: cadvisor
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8282:8282
    restart: always
    deploy:
      mode: global

  grafana:
    container_name: grafana
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    expose:
      - 3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    restart: always
    networks:
      - net
    environment:
      - LETSENCRYPT_HOST=grafana-devops
      - VIRTUAL_HOST=grafana-devops
      - VIRTUAL_PORT=3000

  sonarqube:
    container_name: sonarqube
    image: sonarqube
    expose:
      - 9000
    ports:
      - "9000:9000"
    networks:
      - net
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
      - VIRTUAL_HOST=sonarqube-devops
      - LETSENCRYPT_HOST=sonarqube-devops
      - VIRTUAL_PORT=9000
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins

  postgresql:
    container_name: postgres
    image: postgres
    networks:
      - net
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

  gitlab:
    container_name: gitlab
    image: 'gitlab/gitlab-ee:latest'
    restart: always
    environment:
      #- VIRTUAL_HOST=gitlab-devops
      #- LETSENCRYPT_HOST=gitlab-devops
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab-devops'
        # Add any other gitlab.rb configuration here, each on its own line
    ports:
      - '84:84'
      #- '443:443'
      - '22:22'
    volumes:
      - '$GITLAB_HOME/config:/etc/gitlab'
      - '$GITLAB_HOME/logs:/var/log/gitlab'
      - '$GITLAB_HOME/data:/var/opt/gitlab'
